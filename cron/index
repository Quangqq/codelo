<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cron Job Manager</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }
        .container {
            max-width: 800px;
            margin: 50px auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            color: #343a40;
        }
        form {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-bottom: 20px;
        }
        label {
            font-weight: bold;
            color: #495057;
        }
        input {
            padding: 10px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            font-size: 16px;
            width: 100%;
        }
        button {
            padding: 12px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }
        button:hover {
            background-color: #0056b3;
        }
        .job-list, .status-list {
            margin-top: 20px;
        }
        .status-table {
            width: 100%;
            border-collapse: collapse;
        }
        .status-table th, .status-table td {
            padding: 12px;
            border: 1px solid #dee2e6;
            text-align: left;
        }
        .status-table th {
            background-color: #f1f3f5;
            color: #495057;
            font-weight: bold;
        }
        .status-table tr:nth-child(even) {
            background-color: #f8f9fa;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Cron Job Manager</h1>
        <form id="cronJobForm">
            <label for="apiEndpoint">API Link</label>
            <input type="url" id="apiEndpoint" name="apiEndpoint" placeholder="https://example.com/api" required>

            <label for="intervalSeconds">Interval (Seconds)</label>
            <input type="number" id="intervalSeconds" name="intervalSeconds" placeholder="Enter interval in seconds" min="1" required>

            <button type="submit">Add Cron Job</button>
        </form>

        <div class="status-list">
            <h2>Job Status</h2>
            <table class="status-table" id="statusTable">
                <thead>
                    <tr>
                        <th>API Link</th>
                        <th>Status Code</th>
                        <th>Last Run Time</th>
                    </tr>
                </thead>
                <tbody id="statusItems">
                    <!-- Status updates will be displayed here -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        const statusTableBody = document.getElementById('statusItems');

        document.getElementById('cronJobForm').addEventListener('submit', function (e) {
            e.preventDefault();

            const apiEndpoint = document.getElementById('apiEndpoint').value;
            const intervalSeconds = parseInt(document.getElementById('intervalSeconds').value);
            const currentDate = new Date().toISOString().split('T')[0];

            // Start the cron job
            startCronJob(apiEndpoint, intervalSeconds);
        });

        function startCronJob(apiEndpoint, intervalSeconds) {
            setInterval(() => {
                const lastRunTime = new Date().toLocaleString();
                runApiRequest(apiEndpoint, lastRunTime);
            }, intervalSeconds * 1000);
        }

        function runApiRequest(apiEndpoint, lastRunTime) {
            fetch(apiEndpoint)
                .then(response => {
                    updateStatus(apiEndpoint, response.status, lastRunTime);
                })
                .catch(error => {
                    console.error('Error executing API request:', error);
                    updateStatus(apiEndpoint, 'Error', lastRunTime);
                });
        }

        function updateStatus(apiEndpoint, status, lastRunTime) {
            const row = document.createElement('tr');

            const apiCell = document.createElement('td');
            apiCell.textContent = apiEndpoint;
            row.appendChild(apiCell);

            const statusCell = document.createElement('td');
            statusCell.textContent = status;
            row.appendChild(statusCell);

            const timeCell = document.createElement('td');
            timeCell.textContent = lastRunTime;
            row.appendChild(timeCell);

            statusTableBody.appendChild(row);
        }
    </script>
</body>
</html>
